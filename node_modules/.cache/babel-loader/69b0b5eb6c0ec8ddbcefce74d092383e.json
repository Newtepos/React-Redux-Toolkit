{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst defaultProduct = {\n  item: [],\n  totalQuantity: 0\n};\nconst productSlice = createSlice({\n  name: \"product\",\n  initialState: defaultProduct,\n  reducers: {\n    replaceCartItem(state, action) {\n      state = action.payload;\n    },\n\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.item.find(item => item.id === newItem.id);\n\n      if (!existingItem) {\n        state.item.push({\n          id: newItem.id,\n          name: newItem.name,\n          price: newItem.price,\n          quantity: 1,\n          totolPrice: newItem.price\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totolPrice = existingItem.totolPrice + newItem.price;\n      } //UpdateItem in Cart\n\n\n      state.totalQuantity++;\n    },\n\n    removeItemFromCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.item.find(item => item.id === newItem.id);\n\n      if (existingItem.quantity === 1) {\n        const filteredItem = state.item.filter(item => item.id !== newItem.id);\n        state.item = filteredItem;\n      } else {\n        existingItem.quantity--;\n        existingItem.totolPrice = existingItem.totolPrice - existingItem.price;\n      } //UpdateItem in Cart\n\n\n      state.totalQuantity--;\n    }\n\n  }\n});\nexport const productAction = productSlice.actions;\nexport default productSlice.reducer;","map":{"version":3,"sources":["/Users/thipsukhon/Desktop/React Udemy/Advance-redux/src/store/productSlice.js"],"names":["createSlice","defaultProduct","item","totalQuantity","productSlice","name","initialState","reducers","replaceCartItem","state","action","payload","addItemToCart","newItem","existingItem","find","id","push","price","quantity","totolPrice","removeItemFromCart","filteredItem","filter","productAction","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,IAAI,EAAE,EADe;AAErBC,EAAAA,aAAa,EAAE;AAFM,CAAvB;AAIA,MAAMC,YAAY,GAAGJ,WAAW,CAAC;AAC/BK,EAAAA,IAAI,EAAE,SADyB;AAE/BC,EAAAA,YAAY,EAAEL,cAFiB;AAG/BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,eAAe,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC7BD,MAAAA,KAAK,GAAGC,MAAM,CAACC,OAAf;AACD,KAHO;;AAKRC,IAAAA,aAAa,CAACH,KAAD,EAAQC,MAAR,EAAgB;AAC3B,YAAMG,OAAO,GAAGH,MAAM,CAACC,OAAvB;AACA,YAAMG,YAAY,GAAGL,KAAK,CAACP,IAAN,CAAWa,IAAX,CAAiBb,IAAD,IAAUA,IAAI,CAACc,EAAL,KAAYH,OAAO,CAACG,EAA9C,CAArB;;AAEA,UAAI,CAACF,YAAL,EAAmB;AACjBL,QAAAA,KAAK,CAACP,IAAN,CAAWe,IAAX,CAAgB;AACdD,UAAAA,EAAE,EAAEH,OAAO,CAACG,EADE;AAEdX,UAAAA,IAAI,EAAEQ,OAAO,CAACR,IAFA;AAGda,UAAAA,KAAK,EAAEL,OAAO,CAACK,KAHD;AAIdC,UAAAA,QAAQ,EAAE,CAJI;AAKdC,UAAAA,UAAU,EAAEP,OAAO,CAACK;AALN,SAAhB;AAOD,OARD,MAQO;AACLJ,QAAAA,YAAY,CAACK,QAAb;AACAL,QAAAA,YAAY,CAACM,UAAb,GAA0BN,YAAY,CAACM,UAAb,GAA0BP,OAAO,CAACK,KAA5D;AACD,OAf0B,CAiB3B;;;AACAT,MAAAA,KAAK,CAACN,aAAN;AACD,KAxBO;;AA0BRkB,IAAAA,kBAAkB,CAACZ,KAAD,EAAQC,MAAR,EAAgB;AAChC,YAAMG,OAAO,GAAGH,MAAM,CAACC,OAAvB;AACA,YAAMG,YAAY,GAAGL,KAAK,CAACP,IAAN,CAAWa,IAAX,CAAiBb,IAAD,IAAUA,IAAI,CAACc,EAAL,KAAYH,OAAO,CAACG,EAA9C,CAArB;;AAEA,UAAIF,YAAY,CAACK,QAAb,KAA0B,CAA9B,EAAiC;AAC/B,cAAMG,YAAY,GAAGb,KAAK,CAACP,IAAN,CAAWqB,MAAX,CAClBrB,IAAD,IAAUA,IAAI,CAACc,EAAL,KAAYH,OAAO,CAACG,EADX,CAArB;AAGAP,QAAAA,KAAK,CAACP,IAAN,GAAaoB,YAAb;AACD,OALD,MAKO;AACLR,QAAAA,YAAY,CAACK,QAAb;AACAL,QAAAA,YAAY,CAACM,UAAb,GAA0BN,YAAY,CAACM,UAAb,GAA0BN,YAAY,CAACI,KAAjE;AACD,OAZ+B,CAchC;;;AACAT,MAAAA,KAAK,CAACN,aAAN;AACD;;AA1CO;AAHqB,CAAD,CAAhC;AAiDA,OAAO,MAAMqB,aAAa,GAAGpB,YAAY,CAACqB,OAAnC;AACP,eAAerB,YAAY,CAACsB,OAA5B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst defaultProduct = {\n  item: [],\n  totalQuantity: 0,\n};\nconst productSlice = createSlice({\n  name: \"product\",\n  initialState: defaultProduct,\n  reducers: {\n    replaceCartItem(state, action) {\n      state = action.payload;\n    },\n\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.item.find((item) => item.id === newItem.id);\n\n      if (!existingItem) {\n        state.item.push({\n          id: newItem.id,\n          name: newItem.name,\n          price: newItem.price,\n          quantity: 1,\n          totolPrice: newItem.price,\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totolPrice = existingItem.totolPrice + newItem.price;\n      }\n\n      //UpdateItem in Cart\n      state.totalQuantity++;\n    },\n\n    removeItemFromCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.item.find((item) => item.id === newItem.id);\n\n      if (existingItem.quantity === 1) {\n        const filteredItem = state.item.filter(\n          (item) => item.id !== newItem.id\n        );\n        state.item = filteredItem;\n      } else {\n        existingItem.quantity--;\n        existingItem.totolPrice = existingItem.totolPrice - existingItem.price;\n      }\n\n      //UpdateItem in Cart\n      state.totalQuantity--;\n    },\n  },\n});\n\nexport const productAction = productSlice.actions;\nexport default productSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}