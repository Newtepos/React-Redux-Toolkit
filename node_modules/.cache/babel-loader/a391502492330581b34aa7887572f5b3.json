{"ast":null,"code":"import { pageAction } from \"./pageSlice\";\nimport { productAction } from \"./productSlice\";\nexport const fetchCartData = () => {\n  return async dispatch => {\n    //Start Fetching Data\n    dispatch(pageAction.setNotification({\n      status: \"Fetching\",\n      title: \"Fetching...\",\n      message: \"Data is fetching\"\n    }));\n\n    const fetchData = async () => {\n      const response = await fetch(\"https://react-http-efc44-default-rtdb.asia-southeast1.firebasedatabase.app/cart.json\");\n\n      if (!response.ok) {\n        throw new Error('Fetching data Error');\n      }\n\n      const data = response.json();\n      return data;\n    };\n\n    try {\n      const cartData = await fetchData();\n      dispatch(productAction.replaceCartItem(cartData));\n      console.log(cartData);\n      pageAction.setNotification({\n        status: \"success\",\n        title: \"Success\",\n        message: \"Fetching Data successfull\"\n      });\n    } catch {}\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    //Start Sending Data\n    dispatch(pageAction.setNotification({\n      status: \"Sending\",\n      title: \"Sending...\",\n      message: \"Data is sending...\"\n    }));\n\n    const sendRequest = async () => {\n      const response = await fetch(\"https://react-http-efc44-default-rtdb.asia-southeast1.firebasedatabase.app/cart.json\", {\n        method: \"put\",\n        body: JSON.stringify(cart)\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Sending Cart Data Failed\");\n      }\n    };\n\n    try {\n      await sendRequest(); //Sending Data Complete\n\n      dispatch(pageAction.setNotification({\n        status: \"success\",\n        title: \"success\",\n        message: \"Data is send successfully\"\n      })); //Reset Notification\n\n      setTimeout(() => {\n        dispatch(pageAction.resetNotification());\n      }, 1000);\n    } catch (error) {\n      dispatch(pageAction.setNotification({\n        status: \"error\",\n        title: \"Error\",\n        message: \"Sending Data Failed\"\n      }));\n    }\n  };\n};","map":{"version":3,"sources":["/Users/thipsukhon/Desktop/React Udemy/Advance-redux/src/store/product-action.js"],"names":["pageAction","productAction","fetchCartData","dispatch","setNotification","status","title","message","fetchData","response","fetch","ok","Error","data","json","cartData","replaceCartItem","console","log","sendCartData","cart","sendRequest","method","body","JSON","stringify","setTimeout","resetNotification","error"],"mappings":"AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA,SAASC,aAAT,QAA8B,gBAA9B;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,SAAO,MAAOC,QAAP,IAAoB;AACzB;AACAA,IAAAA,QAAQ,CACNH,UAAU,CAACI,eAAX,CAA2B;AACzBC,MAAAA,MAAM,EAAE,UADiB;AAEzBC,MAAAA,KAAK,EAAE,aAFkB;AAGzBC,MAAAA,OAAO,EAAE;AAHgB,KAA3B,CADM,CAAR;;AAQA,UAAMC,SAAS,GAAG,YAAY;AAC1B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sFAAD,CAA5B;;AAEA,UAAG,CAACD,QAAQ,CAACE,EAAb,EAAiB;AACb,cAAM,IAAIC,KAAJ,CAAU,qBAAV,CAAN;AACH;;AACD,YAAMC,IAAI,GAAGJ,QAAQ,CAACK,IAAT,EAAb;AAEA,aAAOD,IAAP;AACH,KATD;;AAWA,QAAG;AACC,YAAME,QAAQ,GAAG,MAAMP,SAAS,EAAhC;AACAL,MAAAA,QAAQ,CAACF,aAAa,CAACe,eAAd,CAA8BD,QAA9B,CAAD,CAAR;AAEAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEAf,MAAAA,UAAU,CAACI,eAAX,CAA2B;AACvBC,QAAAA,MAAM,EAAE,SADe;AAEvBC,QAAAA,KAAK,EAAE,SAFgB;AAGvBC,QAAAA,OAAO,EAAE;AAHc,OAA3B;AAKH,KAXD,CAWC,MAAK,CAEL;AAEF,GApCD;AAqCD,CAtCM;AAwCP,OAAO,MAAMY,YAAY,GAAIC,IAAD,IAAU;AACpC,SAAO,MAAOjB,QAAP,IAAoB;AACzB;AACAA,IAAAA,QAAQ,CACNH,UAAU,CAACI,eAAX,CAA2B;AACzBC,MAAAA,MAAM,EAAE,SADiB;AAEzBC,MAAAA,KAAK,EAAE,YAFkB;AAGzBC,MAAAA,OAAO,EAAE;AAHgB,KAA3B,CADM,CAAR;;AAQA,UAAMc,WAAW,GAAG,YAAY;AAC9B,YAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAC1B,sFAD0B,EAE1B;AAAEY,QAAAA,MAAM,EAAE,KAAV;AAAiBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AAAvB,OAF0B,CAA5B;;AAKA,UAAI,CAACX,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACD;AACF,KATD;;AAWA,QAAI;AACF,YAAMS,WAAW,EAAjB,CADE,CAGF;;AACAlB,MAAAA,QAAQ,CACNH,UAAU,CAACI,eAAX,CAA2B;AACzBC,QAAAA,MAAM,EAAE,SADiB;AAEzBC,QAAAA,KAAK,EAAE,SAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADM,CAAR,CAJE,CAYF;;AACAmB,MAAAA,UAAU,CAAC,MAAM;AACfvB,QAAAA,QAAQ,CAACH,UAAU,CAAC2B,iBAAX,EAAD,CAAR;AACD,OAFS,EAEP,IAFO,CAAV;AAGD,KAhBD,CAgBE,OAAOC,KAAP,EAAc;AACdzB,MAAAA,QAAQ,CACNH,UAAU,CAACI,eAAX,CAA2B;AACzBC,QAAAA,MAAM,EAAE,OADiB;AAEzBC,QAAAA,KAAK,EAAE,OAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADM,CAAR;AAOD;AACF,GA9CD;AA+CD,CAhDM","sourcesContent":["import { pageAction } from \"./pageSlice\";\nimport { productAction } from \"./productSlice\";\n\nexport const fetchCartData = () => {\n  return async (dispatch) => {\n    //Start Fetching Data\n    dispatch(\n      pageAction.setNotification({\n        status: \"Fetching\",\n        title: \"Fetching...\",\n        message: \"Data is fetching\",\n      })\n    );\n\n    const fetchData = async () => {\n        const response = await fetch(\"https://react-http-efc44-default-rtdb.asia-southeast1.firebasedatabase.app/cart.json\")\n\n        if(!response.ok) {\n            throw new Error('Fetching data Error')\n        }\n        const data = response.json();\n\n        return data\n    };\n\n    try{\n        const cartData = await fetchData();\n        dispatch(productAction.replaceCartItem(cartData));\n\n        console.log(cartData)\n\n        pageAction.setNotification({\n            status: \"success\",\n            title: \"Success\",\n            message: \"Fetching Data successfull\",\n          })\n    }catch{\n\n    }\n\n  };\n};\n\nexport const sendCartData = (cart) => {\n  return async (dispatch) => {\n    //Start Sending Data\n    dispatch(\n      pageAction.setNotification({\n        status: \"Sending\",\n        title: \"Sending...\",\n        message: \"Data is sending...\",\n      })\n    );\n\n    const sendRequest = async () => {\n      const response = await fetch(\n        \"https://react-http-efc44-default-rtdb.asia-southeast1.firebasedatabase.app/cart.json\",\n        { method: \"put\", body: JSON.stringify(cart) }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Sending Cart Data Failed\");\n      }\n    };\n\n    try {\n      await sendRequest();\n\n      //Sending Data Complete\n      dispatch(\n        pageAction.setNotification({\n          status: \"success\",\n          title: \"success\",\n          message: \"Data is send successfully\",\n        })\n      );\n\n      //Reset Notification\n      setTimeout(() => {\n        dispatch(pageAction.resetNotification());\n      }, 1000);\n    } catch (error) {\n      dispatch(\n        pageAction.setNotification({\n          status: \"error\",\n          title: \"Error\",\n          message: \"Sending Data Failed\",\n        })\n      );\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}