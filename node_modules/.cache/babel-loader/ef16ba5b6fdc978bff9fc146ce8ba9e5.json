{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst defaultProduct = {\n  item: [],\n  totalQuantity: 0\n};\nconst productSlice = createSlice({\n  name: \"product\",\n  initialState: defaultProduct,\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.item.find(item => item.id === newItem.id);\n\n      if (!existingItem) {\n        state.item.push({\n          id: newItem.id,\n          name: newItem.name,\n          price: newItem.price,\n          quantity: 1,\n          totolPrice: newItem.price\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totolPrice = existingItem.totolPrice + newItem.price;\n      } //UpdateItem in Cart\n\n\n      state.totalQuantity++;\n    },\n\n    removeItemFromCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.item.find(item => item.id === newItem.id);\n\n      if (existingItem.quantity === 1) {\n        const filteredItem = state.item.filter(item => item.id !== newItem.id);\n        state.item = filteredItem;\n      } else {\n        existingItem.quantity--;\n        existingItem.totolPrice = existingItem.totolPrice - existingItem.price;\n      } //UpdateItem in Cart\n\n\n      state.totalQuantity--;\n    }\n\n  }\n});\nexport const productAction = productSlice.actions;\nexport default productSlice.reducer;","map":{"version":3,"sources":["/Users/thipsukhon/Desktop/React Udemy/Advance-redux/src/store/productSlice.js"],"names":["createSlice","defaultProduct","item","totalQuantity","productSlice","name","initialState","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","id","push","price","quantity","totolPrice","removeItemFromCart","filteredItem","filter","productAction","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,IAAI,EAAE,EADe;AAErBC,EAAAA,aAAa,EAAE;AAFM,CAAvB;AAIA,MAAMC,YAAY,GAAGJ,WAAW,CAAC;AAC/BK,EAAAA,IAAI,EAAE,SADyB;AAE/BC,EAAAA,YAAY,EAAEL,cAFiB;AAG/BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC3B,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACP,IAAN,CAAWY,IAAX,CAAiBZ,IAAD,IAAUA,IAAI,CAACa,EAAL,KAAYJ,OAAO,CAACI,EAA9C,CAArB;;AAEA,UAAI,CAACF,YAAL,EAAmB;AACjBJ,QAAAA,KAAK,CAACP,IAAN,CAAWc,IAAX,CAAgB;AACdD,UAAAA,EAAE,EAAEJ,OAAO,CAACI,EADE;AAEdV,UAAAA,IAAI,EAAEM,OAAO,CAACN,IAFA;AAGdY,UAAAA,KAAK,EAAEN,OAAO,CAACM,KAHD;AAIdC,UAAAA,QAAQ,EAAE,CAJI;AAKdC,UAAAA,UAAU,EAAER,OAAO,CAACM;AALN,SAAhB;AAOD,OARD,MAQO;AACLJ,QAAAA,YAAY,CAACK,QAAb;AACAL,QAAAA,YAAY,CAACM,UAAb,GAA0BN,YAAY,CAACM,UAAb,GAA0BR,OAAO,CAACM,KAA5D;AACD,OAf0B,CAiB3B;;;AACAR,MAAAA,KAAK,CAACN,aAAN;AACD,KApBO;;AAsBRiB,IAAAA,kBAAkB,CAACX,KAAD,EAAQC,MAAR,EAAgB;AAChC,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACP,IAAN,CAAWY,IAAX,CAAiBZ,IAAD,IAAUA,IAAI,CAACa,EAAL,KAAYJ,OAAO,CAACI,EAA9C,CAArB;;AAEA,UAAIF,YAAY,CAACK,QAAb,KAA0B,CAA9B,EAAiC;AAC/B,cAAMG,YAAY,GAAGZ,KAAK,CAACP,IAAN,CAAWoB,MAAX,CAClBpB,IAAD,IAAUA,IAAI,CAACa,EAAL,KAAYJ,OAAO,CAACI,EADX,CAArB;AAGAN,QAAAA,KAAK,CAACP,IAAN,GAAamB,YAAb;AACD,OALD,MAKO;AACLR,QAAAA,YAAY,CAACK,QAAb;AACAL,QAAAA,YAAY,CAACM,UAAb,GAA0BN,YAAY,CAACM,UAAb,GAA0BN,YAAY,CAACI,KAAjE;AACD,OAZ+B,CAchC;;;AACAR,MAAAA,KAAK,CAACN,aAAN;AACD;;AAtCO;AAHqB,CAAD,CAAhC;AA6CA,OAAO,MAAMoB,aAAa,GAAGnB,YAAY,CAACoB,OAAnC;AACP,eAAepB,YAAY,CAACqB,OAA5B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst defaultProduct = {\n  item: [],\n  totalQuantity: 0,\n};\nconst productSlice = createSlice({\n  name: \"product\",\n  initialState: defaultProduct,\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.item.find((item) => item.id === newItem.id);\n\n      if (!existingItem) {\n        state.item.push({\n          id: newItem.id,\n          name: newItem.name,\n          price: newItem.price,\n          quantity: 1,\n          totolPrice: newItem.price,\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totolPrice = existingItem.totolPrice + newItem.price;\n      }\n\n      //UpdateItem in Cart\n      state.totalQuantity++;\n    },\n\n    removeItemFromCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.item.find((item) => item.id === newItem.id);\n\n      if (existingItem.quantity === 1) {\n        const filteredItem = state.item.filter(\n          (item) => item.id !== newItem.id\n        );\n        state.item = filteredItem;\n      } else {\n        existingItem.quantity--;\n        existingItem.totolPrice = existingItem.totolPrice - existingItem.price;\n      }\n\n      //UpdateItem in Cart\n      state.totalQuantity--;\n    },\n  },\n});\n\nexport const productAction = productSlice.actions;\nexport default productSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}